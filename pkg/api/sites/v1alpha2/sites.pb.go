// Copyright 2019 Publr Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/sites/v1alpha2/sites.proto

package sites

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v1alpha2 "github.com/prksu/publr/pkg/api/users/v1alpha2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Site struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Domain               string               `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Owner                *v1alpha2.User       `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Site) Reset()         { *m = Site{} }
func (m *Site) String() string { return proto.CompactTextString(m) }
func (*Site) ProtoMessage()    {}
func (*Site) Descriptor() ([]byte, []int) {
	return fileDescriptor_7de697e73d991ddc, []int{0}
}

func (m *Site) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Site.Unmarshal(m, b)
}
func (m *Site) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Site.Marshal(b, m, deterministic)
}
func (m *Site) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Site.Merge(m, src)
}
func (m *Site) XXX_Size() int {
	return xxx_messageInfo_Site.Size(m)
}
func (m *Site) XXX_DiscardUnknown() {
	xxx_messageInfo_Site.DiscardUnknown(m)
}

var xxx_messageInfo_Site proto.InternalMessageInfo

func (m *Site) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Site) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Site) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Site) GetOwner() *v1alpha2.User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Site) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Site) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type CreateSiteRequest struct {
	Site                 *Site    `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSiteRequest) Reset()         { *m = CreateSiteRequest{} }
func (m *CreateSiteRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSiteRequest) ProtoMessage()    {}
func (*CreateSiteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7de697e73d991ddc, []int{1}
}

func (m *CreateSiteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSiteRequest.Unmarshal(m, b)
}
func (m *CreateSiteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSiteRequest.Marshal(b, m, deterministic)
}
func (m *CreateSiteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSiteRequest.Merge(m, src)
}
func (m *CreateSiteRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSiteRequest.Size(m)
}
func (m *CreateSiteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSiteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSiteRequest proto.InternalMessageInfo

func (m *CreateSiteRequest) GetSite() *Site {
	if m != nil {
		return m.Site
	}
	return nil
}

type GetSiteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSiteRequest) Reset()         { *m = GetSiteRequest{} }
func (m *GetSiteRequest) String() string { return proto.CompactTextString(m) }
func (*GetSiteRequest) ProtoMessage()    {}
func (*GetSiteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7de697e73d991ddc, []int{2}
}

func (m *GetSiteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSiteRequest.Unmarshal(m, b)
}
func (m *GetSiteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSiteRequest.Marshal(b, m, deterministic)
}
func (m *GetSiteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSiteRequest.Merge(m, src)
}
func (m *GetSiteRequest) XXX_Size() int {
	return xxx_messageInfo_GetSiteRequest.Size(m)
}
func (m *GetSiteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSiteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSiteRequest proto.InternalMessageInfo

func (m *GetSiteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteSiteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSiteRequest) Reset()         { *m = DeleteSiteRequest{} }
func (m *DeleteSiteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSiteRequest) ProtoMessage()    {}
func (*DeleteSiteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7de697e73d991ddc, []int{3}
}

func (m *DeleteSiteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSiteRequest.Unmarshal(m, b)
}
func (m *DeleteSiteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSiteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSiteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSiteRequest.Merge(m, src)
}
func (m *DeleteSiteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSiteRequest.Size(m)
}
func (m *DeleteSiteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSiteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSiteRequest proto.InternalMessageInfo

func (m *DeleteSiteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Site)(nil), "publr.sites.v1alpha2.Site")
	proto.RegisterType((*CreateSiteRequest)(nil), "publr.sites.v1alpha2.CreateSiteRequest")
	proto.RegisterType((*GetSiteRequest)(nil), "publr.sites.v1alpha2.GetSiteRequest")
	proto.RegisterType((*DeleteSiteRequest)(nil), "publr.sites.v1alpha2.DeleteSiteRequest")
}

func init() { proto.RegisterFile("api/sites/v1alpha2/sites.proto", fileDescriptor_7de697e73d991ddc) }

var fileDescriptor_7de697e73d991ddc = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x6e, 0xd4, 0x30,
	0x10, 0x56, 0x96, 0xec, 0x22, 0x66, 0x25, 0x50, 0xad, 0xaa, 0x44, 0xe1, 0x6f, 0x15, 0x55, 0x6a,
	0xd5, 0x83, 0x0d, 0x5b, 0x71, 0xa1, 0xe2, 0x42, 0x41, 0xdc, 0x53, 0xb8, 0x70, 0x41, 0xce, 0x76,
	0x48, 0xad, 0x26, 0xb1, 0x71, 0x9c, 0x22, 0x84, 0xb8, 0xf0, 0x0a, 0x3c, 0x1a, 0x0f, 0xc0, 0x85,
	0x47, 0xe0, 0x01, 0x90, 0xed, 0x84, 0x74, 0x9b, 0x74, 0x7b, 0xcb, 0xcc, 0x7c, 0x9f, 0xbf, 0xef,
	0x1b, 0xc7, 0xf0, 0x98, 0x2b, 0xc1, 0x6a, 0x61, 0xb0, 0x66, 0x17, 0xcf, 0x78, 0xa1, 0xce, 0xf8,
	0xd2, 0x97, 0x54, 0x69, 0x69, 0x24, 0xd9, 0x56, 0x4d, 0x56, 0x68, 0xea, 0x5b, 0x1d, 0x22, 0x76,
	0xac, 0xa6, 0x46, 0x7d, 0x89, 0xe5, 0x4a, 0xcf, 0x8a, 0x1f, 0xe6, 0x52, 0xe6, 0x05, 0x32, 0x0b,
	0xe3, 0x55, 0x25, 0x0d, 0x37, 0x42, 0x56, 0xdd, 0xf4, 0x41, 0x3b, 0x75, 0x55, 0xd6, 0x7c, 0x62,
	0x58, 0x2a, 0xf3, 0xb5, 0x1d, 0x3e, 0xb9, 0x3a, 0x34, 0xa2, 0xc4, 0xda, 0xf0, 0x52, 0x79, 0x40,
	0xf2, 0x37, 0x80, 0xf0, 0x44, 0x18, 0x24, 0x04, 0xc2, 0x8a, 0x97, 0x18, 0x05, 0x8b, 0x60, 0xff,
	0x4e, 0xea, 0xbe, 0xc9, 0x36, 0x4c, 0x8d, 0x30, 0x05, 0x46, 0x13, 0xd7, 0xf4, 0x05, 0xd9, 0x81,
	0xd9, 0xa9, 0x2c, 0xb9, 0xa8, 0xa2, 0x5b, 0xae, 0xdd, 0x56, 0xe4, 0x29, 0x4c, 0xe5, 0x97, 0x0a,
	0x75, 0x14, 0x2e, 0x82, 0xfd, 0xf9, 0x32, 0xa6, 0x3e, 0xac, 0x4f, 0xd2, 0x05, 0xa3, 0xef, 0x6b,
	0xd4, 0xa9, 0x07, 0x92, 0x23, 0x98, 0xaf, 0x34, 0x72, 0x83, 0x1f, 0xad, 0xad, 0x68, 0xda, 0xf2,
	0xbc, 0x67, 0xda, 0x79, 0xa6, 0xef, 0x3a, 0xcf, 0x29, 0x78, 0xb8, 0x6d, 0x58, 0x72, 0xa3, 0x4e,
	0xff, 0x93, 0x67, 0x37, 0x93, 0x3d, 0xdc, 0x36, 0x92, 0x63, 0xd8, 0x3a, 0x76, 0x47, 0xd9, 0xec,
	0x29, 0x7e, 0x6e, 0xb0, 0x36, 0x84, 0x42, 0x68, 0x6f, 0xc6, 0xad, 0xa0, 0xf7, 0xbf, 0x7e, 0x59,
	0xd4, 0x11, 0x1c, 0x2e, 0xd9, 0x85, 0xbb, 0x6f, 0xd1, 0x5c, 0x3e, 0x61, 0x64, 0x89, 0xc9, 0x1e,
	0x6c, 0xbd, 0xc6, 0x02, 0xd7, 0xa5, 0x46, 0x80, 0xcb, 0xdf, 0x13, 0x98, 0x5b, 0xcc, 0x09, 0xea,
	0x0b, 0xb1, 0x42, 0xa2, 0x00, 0x7a, 0x8f, 0x64, 0x6f, 0xdc, 0xce, 0x20, 0x45, 0xbc, 0xc1, 0x77,
	0xf2, 0xe8, 0xc7, 0xaf, 0x3f, 0x3f, 0x27, 0xf7, 0x93, 0x7b, 0x57, 0x7e, 0xcf, 0x17, 0x2e, 0x10,
	0x29, 0xe1, 0x76, 0x1b, 0x88, 0xec, 0x8e, 0x9f, 0xb2, 0x9e, 0x77, 0xa3, 0xd6, 0xc2, 0x69, 0xc5,
	0x24, 0xea, 0xb5, 0xbe, 0xd9, 0x9c, 0x2f, 0xfd, 0xfb, 0x38, 0xf8, 0x4e, 0x24, 0x40, 0xbf, 0x99,
	0xeb, 0x02, 0x0e, 0x76, 0x17, 0xef, 0x0c, 0xee, 0xf8, 0x8d, 0xfd, 0xe3, 0x3b, 0xc1, 0x83, 0x6b,
	0x05, 0x5f, 0x3d, 0xff, 0x70, 0x98, 0x0b, 0x73, 0xd6, 0x64, 0x74, 0x25, 0x4b, 0xa6, 0xf4, 0x79,
	0xdd, 0x30, 0x27, 0xca, 0xd4, 0x79, 0xce, 0x86, 0x6f, 0xf7, 0xc8, 0x95, 0xd9, 0xcc, 0x09, 0x1d,
	0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x97, 0xb0, 0x4b, 0xf7, 0xde, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SiteServiceClient is the client API for SiteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SiteServiceClient interface {
	CreateSite(ctx context.Context, in *CreateSiteRequest, opts ...grpc.CallOption) (*Site, error)
	GetSite(ctx context.Context, in *GetSiteRequest, opts ...grpc.CallOption) (*Site, error)
	DeleteSite(ctx context.Context, in *DeleteSiteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type siteServiceClient struct {
	cc *grpc.ClientConn
}

func NewSiteServiceClient(cc *grpc.ClientConn) SiteServiceClient {
	return &siteServiceClient{cc}
}

func (c *siteServiceClient) CreateSite(ctx context.Context, in *CreateSiteRequest, opts ...grpc.CallOption) (*Site, error) {
	out := new(Site)
	err := c.cc.Invoke(ctx, "/publr.sites.v1alpha2.SiteService/CreateSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *siteServiceClient) GetSite(ctx context.Context, in *GetSiteRequest, opts ...grpc.CallOption) (*Site, error) {
	out := new(Site)
	err := c.cc.Invoke(ctx, "/publr.sites.v1alpha2.SiteService/GetSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *siteServiceClient) DeleteSite(ctx context.Context, in *DeleteSiteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/publr.sites.v1alpha2.SiteService/DeleteSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SiteServiceServer is the server API for SiteService service.
type SiteServiceServer interface {
	CreateSite(context.Context, *CreateSiteRequest) (*Site, error)
	GetSite(context.Context, *GetSiteRequest) (*Site, error)
	DeleteSite(context.Context, *DeleteSiteRequest) (*empty.Empty, error)
}

// UnimplementedSiteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSiteServiceServer struct {
}

func (*UnimplementedSiteServiceServer) CreateSite(ctx context.Context, req *CreateSiteRequest) (*Site, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSite not implemented")
}
func (*UnimplementedSiteServiceServer) GetSite(ctx context.Context, req *GetSiteRequest) (*Site, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSite not implemented")
}
func (*UnimplementedSiteServiceServer) DeleteSite(ctx context.Context, req *DeleteSiteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSite not implemented")
}

func RegisterSiteServiceServer(s *grpc.Server, srv SiteServiceServer) {
	s.RegisterService(&_SiteService_serviceDesc, srv)
}

func _SiteService_CreateSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SiteServiceServer).CreateSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publr.sites.v1alpha2.SiteService/CreateSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SiteServiceServer).CreateSite(ctx, req.(*CreateSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SiteService_GetSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SiteServiceServer).GetSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publr.sites.v1alpha2.SiteService/GetSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SiteServiceServer).GetSite(ctx, req.(*GetSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SiteService_DeleteSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSiteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SiteServiceServer).DeleteSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/publr.sites.v1alpha2.SiteService/DeleteSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SiteServiceServer).DeleteSite(ctx, req.(*DeleteSiteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SiteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "publr.sites.v1alpha2.SiteService",
	HandlerType: (*SiteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSite",
			Handler:    _SiteService_CreateSite_Handler,
		},
		{
			MethodName: "GetSite",
			Handler:    _SiteService_GetSite_Handler,
		},
		{
			MethodName: "DeleteSite",
			Handler:    _SiteService_DeleteSite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/sites/v1alpha2/sites.proto",
}
