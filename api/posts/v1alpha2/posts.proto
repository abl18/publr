// Copyright 2019 Publr Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package publr.posts.v1alpha2;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/prksu/publr/pkg/api/posts/v1alpha2;posts";

service PostService {
  rpc ListPost(ListPostRequest) returns (PostList) {
    option (google.api.http) = {
      get: "/v1alpha2/{parent=sites/*}/posts"
      additional_bindings {
        get: "/v1alpha2/{parent=sites/*/authors/*}/posts"
      }
    };
  }
  rpc CreatePost(CreatePostRequest) returns (Post) {
    option (google.api.http) = {
      post: "/v1alpha2/{parent=sites/*/authors/*}/posts"
      body: "post"
    };
  }
  rpc GetPost(GetPostRequest) returns (Post) {
    option (google.api.http) = {
      get: "/v1alpha2/{name=sites/*/posts/*}"
      additional_bindings {
        get: "/v1alpha2/{name=sites/*/authors/*/posts/*}"
      }
    };
  }
  rpc UpdatePost(UpdatePostRequest) returns (Post) {
    option (google.api.http) = {
      patch: "/v1alpha2/{name=sites/*/authors/*/posts/*}"
      body: "post"
    };
  }
  rpc DeletePost(DeletePostRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha2/{name=sites/*/authors/*/posts/*}"
    };
  }
  rpc SearchPost(SearchPostRequest) returns (PostList) {
    option (google.api.http) = {
      get: "/v1alpha2/{parent=sites/*}/posts:search"
      additional_bindings {
        get: "/v1alpha2/{parent=sites/*/authors/*}/posts:search"
      }
    };
  }
}

message Post {
  string name = 1;
  string title = 2;
  string slug = 3;
  string html = 4;
  string image = 5;
  bool published = 6;
  google.protobuf.Timestamp create_time = 7;
  google.protobuf.Timestamp update_time = 8;
  google.protobuf.Timestamp publish_time = 9;
}

message PostList {
  repeated Post posts = 1;
  string next_page_token = 2;
}

message ListPostRequest {
  string parent = 1;
  bool published = 2;
  string order_by = 3;
  int32 page_size = 4;
  string page_token = 5;
}

message CreatePostRequest {
  string parent = 1;
  Post post = 2;
}

message GetPostRequest {
  string name = 1;
}

message UpdatePostRequest {
  string name = 1;
  Post post = 2;
}

message DeletePostRequest {
  string name = 1;
}

message SearchPostRequest {
  string parent = 1;
  string query = 2;
  bool published = 3;
  string order_by = 4;
  int32 page_size = 5;
  string page_token = 6;
}